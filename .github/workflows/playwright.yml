name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: "20.10.0"

jobs:
  test:
    timeout-minutes: 60
    environment: production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
        if: github.event_name == 'pull_request'

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request'

      - name: Fetch base branch for comparison
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Changed files only
        if: github.event_name == 'pull_request'
        run: |
          echo "Running tests for changes between ${{ github.base_ref }} and current branch"
          npx playwright test --only-changed=${{ github.base_ref }}

      - name: Run regression only
        if: github.event_name == 'push'
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          TAGS='@regression' npx playwright test --project=tests

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=current_time::$(date +'%Y-%m-%d-%H-%M-%S')"

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report
          destination_dir: ${{ github.sha }}-${{ steps.timestamp.outputs.current_time }}

      - name: Generate and log Playwright report URL
        if: always()
        run: |
          repo_name=${{ github.repository }} && repo_name=${repo_name#*/}
          reportUrl="https://${{ github.repository_owner }}.github.io/$repo_name/${{ github.sha }}-${{ steps.timestamp.outputs.current_time }}/"
          echo "Playwright Test Report available at: $reportUrl"
